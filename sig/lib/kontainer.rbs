# Entrypoint module of IoC container
module Kontainer
  # Raised when the type is added to the container missing rbs signature
  class TypeWithoutSignatureError < StandardError
    def initialize: (untyped `type`) -> void
  end

  def self.new: () { () [self: TypesRegistry] -> untyped } -> untyped

  # Deals with registration and resolving of services
  class TypesRegistry
    ENUMERABLE_TYPE: untyped

    ID: untyped

    def add_sigs: (untyped path) -> untyped

    def add: (untyped `type`, ?as: untyped) -> untyped

    def resolve: (untyped `type`) -> untyped

    def resolve_all: (untyped `type`) -> untyped

    private

    def type_descriptors: (untyped `type`) ?{ () -> untyped } -> untyped

    def resolve_by_limit: (untyped) -> untyped

    def positional_args_of: (untyped definition) -> untyped

    def keyword_args_of: (untyped definition) -> untyped

    def constantize_rbs_type: (untyped `type`) -> untyped

    def resolve_arg: (untyped `type`) -> untyped

    def enumerable?: (untyped `type`) -> untyped

    def rbs_type_from: (untyped `type`) -> untyped

    def ensure_rbs_loaded: () -> (untyped | nil)

    def build_rbs: () -> untyped

    def typed?: (untyped rbs_type) -> untyped

    def types_hash: () -> untyped

    def paths: () -> untyped

    @paths: Array[String]
    @types_hash: Hash[untyped, untyped]
    @rbs_builder: untyped
    @rbs_environment: untyped
  end
end
